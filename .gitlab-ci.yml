include:
- project: 'devops/central-ci'
  ref: master
  file: '/cx-scan.yml'



before_script:
  - export JAVA_HOME="/Applications/Android Studio.app/Contents/jre/Contents/Home/"
  - export ANDROID_HOME=$HOME/Library/Android/sdk
  - export PATH=$PATH:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
  
variables:
  JACOCO_CSV_FILE: '$CI_PROJECT_DIR/connect-sdk/build/reports/jacoco/jacocoTestReport/jacocoTestReport.csv'
    
stages:
  - build
  - postbuild
  - scan
#  - scan-container
  - sonatype
  - release
  
build_project:
  stage: build
  script:
    - ./gradlew connect-sdk:clean
    - ./gradlew connect-sdk:assemble
  tags:
    - xcode

coverage:
  stage: postbuild
  script:
    - ./ci/start-emu
    - ./gradlew connect-sdk:createDebugCoverageReport
    - ./ci/stop-emu
    - ./gradlew connect-sdk:testDebugUnitTest
    - ./gradlew connect-sdk:jacocoTestReport
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { printf "Test Coverage %0.2f%%\n", 100*covered/instructions }' $JACOCO_CSV_FILE
  artifacts:
    when: always
    paths:
      - connect-sdk/build/outputs/
      - connect-sdk/build/jacoco/
      - connect-sdk/build/reports/
    expire_in: 1 days
  tags:
    - xcode
    
sonarqube:
  stage: scan
  script:
    - ./gradlew connect-sdk:sonarqube
  tags:
    - xcode

# scan-container:
#   image: dcr.fini.city/devops/osiris
#   stage: scan-container
#   allow_failure: false
#   script:
#     #- scan_container ${IMAGE_REGISTRY}
#     - scan_container $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
#   only:
#     - develop
#     - master


publish_to_staging:
  stage: sonatype
  script:
    - ./gradlew connect-sdk:clean
    - ./gradlew connect-sdk:assembleRelease
    - ./gradlew connect-sdk:publishToSonatype closeSonatypeStagingRepository
  tags:
    - xcode    

release:
  stage: release
  only:
    - master
  when: manual
  script:
    - ./gradlew releaseSonatypeStagingRepository
  tags:
    - xcode 
